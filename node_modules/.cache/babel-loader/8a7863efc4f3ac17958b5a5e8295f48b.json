{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/home/aziyatali/Desktop/IV-Leaflet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"/home/aziyatali/Desktop/IV-Leaflet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\nimport papa from \"papaparse\";\nimport legendItems from \"../entities/LegendItems\";\nimport { features } from \"../data/countries.json\";\nconsole.log(features);\n\nvar _processCovidData = _classPrivateFieldLooseKey(\"processCovidData\");\n\nvar _setCountryColor = _classPrivateFieldLooseKey(\"setCountryColor\");\n\nvar _formatNumberWithCommas = _classPrivateFieldLooseKey(\"formatNumberWithCommas\");\n\nclass LoadCountryTask {\n  constructor() {\n    this.covidUrl = \"https://raw.githubusercontent.com/aziyatali/IV-Leaflet/main/src/data/owid-covid-data.csv\";\n    this.setState = null;\n\n    this.load = setState => {\n      this.setState = setState;\n      papa.parse(this.covidUrl, {\n        download: true,\n        header: true,\n        complete: result => _classPrivateFieldLooseBase(this, _processCovidData)[_processCovidData](result.data)\n      });\n    };\n\n    Object.defineProperty(this, _processCovidData, {\n      writable: true,\n      value: covidCountries => {\n        console.log(\"parsed data: \", covidCountries);\n\n        for (let i = 0; i < features.length; i++) {\n          const country = features[i]; //console.log(country);\n\n          const covidCountry = covidCountries.find(covidCountry => country.properties.ISO_A3 === covidCountry.iso_code); //console.log(\"covid_country: \", covidCountry);\n\n          country.properties.confirmed = 0;\n          country.properties.confirmedText = 0;\n\n          if (covidCountry != null) {\n            let confirmed = Number(covidCountry.total_cases); // console.log(\"CASE: \", confirmed);\n\n            country.properties.confirmed = confirmed;\n            country.properties.confirmedText = _classPrivateFieldLooseBase(this, _formatNumberWithCommas)[_formatNumberWithCommas](confirmed);\n          }\n\n          _classPrivateFieldLooseBase(this, _setCountryColor)[_setCountryColor](country);\n        }\n\n        this.setState(features);\n      }\n    });\n    Object.defineProperty(this, _setCountryColor, {\n      writable: true,\n      value: country => {\n        const legendItem = legendItems.find(item => item.isFor(country.properties.confirmed));\n        if (legendItem != null) country.properties.color = legendItem.color;\n      }\n    });\n    Object.defineProperty(this, _formatNumberWithCommas, {\n      writable: true,\n      value: number => {\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      }\n    });\n  }\n\n}\n\nexport default LoadCountryTask;","map":{"version":3,"sources":["/home/aziyatali/Desktop/IV-Leaflet/src/tasks/LoadCountriesTask.js"],"names":["papa","legendItems","features","console","log","LoadCountryTask","covidUrl","setState","load","parse","download","header","complete","result","data","covidCountries","i","length","country","covidCountry","find","properties","ISO_A3","iso_code","confirmed","confirmedText","Number","total_cases","legendItem","item","isFor","color","number","toString","replace"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACAC,OAAO,CAACC,GAAR,CAAYF,QAAZ;;;;;;;;AACA,MAAMG,eAAN,CAAsB;AAAA;AAAA,SACpBC,QADoB,GACT,0FADS;AAAA,SAGpBC,QAHoB,GAGT,IAHS;;AAAA,SAKpBC,IALoB,GAKZD,QAAD,IAAc;AACnB,WAAKA,QAAL,GAAgBA,QAAhB;AACAP,MAAAA,IAAI,CAACS,KAAL,CAAW,KAAKH,QAAhB,EAA0B;AACxBI,QAAAA,QAAQ,EAAE,IADc;AAExBC,QAAAA,MAAM,EAAE,IAFgB;AAGxBC,QAAAA,QAAQ,EAAGC,MAAD,gCAAY,IAAZ,wCAAmCA,MAAM,CAACC,IAA1C;AAHc,OAA1B;AAKD,KAZmB;;AAAA;AAAA;AAAA,aAcCC,cAAD,IAAoB;AACtCZ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BW,cAA7B;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,QAAQ,CAACe,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,gBAAME,OAAO,GAAGhB,QAAQ,CAACc,CAAD,CAAxB,CADwC,CAExC;;AACA,gBAAMG,YAAY,GAAGJ,cAAc,CAACK,IAAf,CAClBD,YAAD,IAAkBD,OAAO,CAACG,UAAR,CAAmBC,MAAnB,KAA8BH,YAAY,CAACI,QAD1C,CAArB,CAHwC,CAMxC;;AAEAL,UAAAA,OAAO,CAACG,UAAR,CAAmBG,SAAnB,GAA+B,CAA/B;AACAN,UAAAA,OAAO,CAACG,UAAR,CAAmBI,aAAnB,GAAmC,CAAnC;;AAEA,cAAIN,YAAY,IAAI,IAApB,EAA0B;AACxB,gBAAIK,SAAS,GAAGE,MAAM,CAACP,YAAY,CAACQ,WAAd,CAAtB,CADwB,CAExB;;AACAT,YAAAA,OAAO,CAACG,UAAR,CAAmBG,SAAnB,GAA+BA,SAA/B;AACAN,YAAAA,OAAO,CAACG,UAAR,CAAmBI,aAAnB,+BAAmC,IAAnC,oDACED,SADF;AAGD;;AACD,gFAAsBN,OAAtB;AACD;;AAED,aAAKX,QAAL,CAAcL,QAAd;AACD;AAvCmB;AAAA;AAAA;AAAA,aAyCAgB,OAAD,IAAa;AAC9B,cAAMU,UAAU,GAAG3B,WAAW,CAACmB,IAAZ,CAAkBS,IAAD,IAClCA,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACG,UAAR,CAAmBG,SAA9B,CADiB,CAAnB;AAIA,YAAII,UAAU,IAAI,IAAlB,EAAwBV,OAAO,CAACG,UAAR,CAAmBU,KAAnB,GAA2BH,UAAU,CAACG,KAAtC;AACzB;AA/CmB;AAAA;AAAA;AAAA,aAiDOC,MAAD,IAAY;AACpC,eAAOA,MAAM,CAACC,QAAP,GAAkBC,OAAlB,CAA0B,uBAA1B,EAAmD,GAAnD,CAAP;AACD;AAnDmB;AAAA;;AAAA;;AAsDtB,eAAe7B,eAAf","sourcesContent":["import papa from \"papaparse\";\nimport legendItems from \"../entities/LegendItems\";\nimport { features } from \"../data/countries.json\";\nconsole.log(features);\nclass LoadCountryTask {\n  covidUrl = \"https://raw.githubusercontent.com/aziyatali/IV-Leaflet/main/src/data/owid-covid-data.csv\";\n   \n  setState = null;\n\n  load = (setState) => {\n    this.setState = setState;\n    papa.parse(this.covidUrl, {\n      download: true,\n      header: true,\n      complete: (result) => this.#processCovidData(result.data),\n    });\n  };\n\n  #processCovidData = (covidCountries) => {\n    console.log(\"parsed data: \", covidCountries);\n    for (let i = 0; i < features.length; i++) {\n      const country = features[i];\n      //console.log(country);\n      const covidCountry = covidCountries.find(\n        (covidCountry) => country.properties.ISO_A3 === covidCountry.iso_code\n      );\n      //console.log(\"covid_country: \", covidCountry);\n\n      country.properties.confirmed = 0;\n      country.properties.confirmedText = 0;\n\n      if (covidCountry != null) {\n        let confirmed = Number(covidCountry.total_cases);\n        // console.log(\"CASE: \", confirmed);\n        country.properties.confirmed = confirmed;\n        country.properties.confirmedText = this.#formatNumberWithCommas(\n          confirmed\n        );\n      }\n      this.#setCountryColor(country);\n    }\n\n    this.setState(features);\n  };\n\n  #setCountryColor = (country) => {\n    const legendItem = legendItems.find((item) =>\n      item.isFor(country.properties.confirmed)\n    );\n\n    if (legendItem != null) country.properties.color = legendItem.color;\n  };\n\n  #formatNumberWithCommas = (number) => {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n}\n\nexport default LoadCountryTask;\n"]},"metadata":{},"sourceType":"module"}